epollを使ったサンプル例

epollの使い方
1. 監視対象を入れる箱を作成
2. 箱に監視対象と、監視内容（イベント）を登録
3. 箱の中の監視対象にイベントが起こるまで待機 → 発生したイベント数分の情報が返る

1がepoll_create、2がepoll_ctl、3がepoll_waitになる。
epoll_createの引数は、最初の初期値であるので、別に登録出来る上限というわけではない（足りなければ拡張される）。
epoll_ctlは、基本的にはイベントが発生するファイルディスクリプタ（ソケット等）が監視対象になるが、
epoll_createで作成したものでもいいらしい。
例)
   port 10001 → epoll_FD_1 、port 10002  → epoll_FD_2として、
   epoll_FD_1には10001に接続したソケットを、epoll_FD_2には10002に接続したソケットを
   epoll_FD_3には、epoll_FD_1とepoll_FD_2を登録した場合、epoll_FD_3を監視すれば、
   10001と10002に来たイベントを同時に監視できることになる

epoll_waitの呼び出しには、来たイベントを格納する領域（epoll_event）が必要になる。
このサイズは一度に監視したいだけの数を割り当てればよい。
→ちなみにmanのサンプルでは、epoll_event*の変数をただ引数に渡しているが、これだとメモリアクセスエラーとなって動かない・・・。

また、このサンプルではイベント配送をエッジトリガ（イベントが発生した場合、一度だけ駆動）で行っているため、
ソケットは非ブロッキングモードで開いている。

・myecho_dual_stack.c
IPv4、IPv6どちらの接続も受け付けるように改造したバージョン
IPv6の近接探索のキャッシュ情報は ip -6 nei で確認出来る
